.\"	$Id: 56550e,v 1.18 2009/07/07 11:04:43 hiesl Exp $
.\"	$OpenBSD: mdoc.template,v 1.10 2007/05/31 22:10:19 jmc Exp $
.\"
.\" Copyright (c) 2008 GeNUA mbH <info@genua.de>
.\"
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
.\" A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
.\" OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
.\" TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
.\" PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
.\" LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
.\" NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
.\" SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" The following requests are required for all man pages.
.\"
.\" Remove `\&' from the line below.
.Dd April 11, 2008
.Dt ANOUBISD 8
.Os Anoubis
.Sh NAME
.Nm anoubisd
.Nd Anoubis daemon
.Sh SYNOPSIS
.Nm anoubisd
.Op Fl D Ar flags
.Op Fl dnv
.Op Fl s Ar socket
.Op Fl f Ar conffile
.Sh DESCRIPTION
.Nm
is the user land daemon of the Anoubis Security Suite.
Together with a kernel security module it implements an
Application Level Firewall (ALF), Filesystem Signatures (SFS)
and sandboxing.
.Pp
.Nm
starts early during boot. The
.Em master
process reads the configuration files (policy rules).
It then creates three additional child processes.
The main process becomes the
.Em master
process. The children are the
.Em logger ,
.Em policy
and
.Em session
process.
.Pp
Options available:
.Bl -tag -width Ds
.It Fl D Ar flags
When the
.Fl D
option is set,
.Nm
will turn on debug output to syslog. The
.Ar flags
values (or'ed together) are:
.Pp
0x01 - File descriptor handling
.Pp
0x02 - Message sending
.Pp
0x04 - Message receiving
.Pp
0x08 - Tracing
.Pp
0x10 - Queue handling
.Pp
0x20 - Policy Engine
.Pp
0x40 - Policy Engine processes
.Pp
0x80 - Police Engine SFS
.Pp
0x100 - Policy Engine ALF
.Pp
0x200 - Policy Engine policies
.Pp
0x400 - Policy Engine tracking
.Pp
0x800 - Policy Engine contexts
.Pp
0x1000 - Policy Engine ALF decisions
.Pp
0x2000 - Session Engine
.Pp
0x4000 - Sandbox
.Pp
0x8000 - SFS Caching
.Pp
0x10000 - Policy Engine context borrow
.Pp
0x20000 - Upgrade process
.It Fl d
Generate output to
.Ar stderr
instead of
.Ar syslog
.
.It Fl n
Config test mode.
Only check compatibility with the running kernel.
.Nm
will do nothing except parse the configuration file and terminate.
.It Fl v
Produce more verbose output.
.It Fl s Ar socket
Use the
.Ar socket
for communication.
.It Fl f Ar conffile
Use
.Ar conffile
to configure anoubisd.
.El
.Pp
The daemon processes implements a reliable queuing and messaging
protocol and functions as a message bus for the Anoubis architecture.
.Pp
The
.Em master
process handles all communication to and from the kernel. It passes
notifications directly to the
.Em session
process, which then makes them available to the GUI. The
.Em master
process passes policy events directly to the
.Em policy
process, where they are passed to the
.Em policy engine .
.Pp
The
.Em session
process handles messages coming from the GUI destined for the
.Em policy
process and passes Requests requiring user interaction to the
GUI(s).
.Pp
The
.Em policy
process contains the
.Em policy engine
which analyzes (kernel) requests. The
.Em policy engine
can directly generate a reply, or pass the request to the
.Em session
process for interaction with users.
The
.Em policy
process maintains a list of all outstanding requests and applies
a timeout to messages that are otherwise not answered. A timeout
results in a negative reply to the request.
.\" This next request is for sections 1, 6, 7 & 8 only.
.\" .Sh ENVIRONMENT
.Sh FILES
.Bl -tag -width Ds
.It Pa /etc/anoubis/anoubisd.conf
The default configuration file. See
.Xr anoubisd.conf 5
for more information.
.It Pa /dev/anoubis
The
.Ar ioctl
kernel interface for initializing the Anoubis kernel subsystem
and triggering updates.
.It Pa /dev/eventdev
The kernel interface for Anoubis policy messages.
.It Pa /var/run/anoubisd.pid
Contains the process ID of the
.Ar master
process.
.It Pa /var/lib/anoubis/policy
Contains all the anoubis policies.
.It Pa /var/lib/anoubis/policy/admin
Contains administrative policies, which are evaluated before user policies.
.It Pa /var/lib/anoubis/policy/user
Contains per-user policies.
.It Pa /var/lib/anoubis/policy/pubkeys
Contains public keys used to authenticate with anoubisd.
.It Pa /var/lib/anoubis/sfs
Contains on-disk SFS checksums. See
.Xr sfssig 8
for more information.
.It Pa /var/run/anoubisd.sock
The
.Ar socket
for the GUI and other clients connecting using the
.Ar libanoubischat
and
.Ar libanoubisprotocol
libaries.
.\" .Sh EXAMPLES
.\" This next request is for sections 1, 4, 6, and 8 only.
.\" .Sh DIAGNOSTICS
.\" The next request is for sections 2, 3, and 9 error and signal handling only.
.\" .Sh ERRORS
.Sh SEE ALSO
.Xr anoubisctl 8
.Xr sfssig 8
.Xr anoubisd.conf 5
.\" .Xr foobar 1
.\" .Sh STANDARDS
.\" .Sh HISTORY
.Sh AUTHORS
Hans-Joerg Hoexer and Randall Dow
.\" .Sh CAVEATS
.\" .Sh BUGS
