#! /bin/sh
### BEGIN INIT INFO
# Provides:          anoubisd
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# X-Start-Before:    $network
# X-Stop-After:      $network
# Default-Start:     S 2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start the anoubisd
# Description:       This file starts the daemon responsible for managing
#                    an anoubis system
### END INIT INFO

# Author: Michael Gernoth <gernoth@anoubis.genua.de>

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Anoubis daemon"
NAME=anoubisd
DAEMON=/sbin/$NAME
DAEMON_ARGS=""
SCRIPTNAME=/etc/init.d/$NAME
PIDFILE=/var/run/$NAME.pid
CTRL=/sbin/anoubisctl

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

do_test()
{
	if [ -x /usr/share/anoubisd/upgrade_sfs.pl ]; then
		/usr/share/anoubisd/upgrade_sfs.pl
	fi

	msg=$($DAEMON -n 2>&1);
	RC=$?
	if [ "$RC" != "0" ]; then
		log_end_msg 1
		log_failure_msg $msg
		return $RC
	else
		return 0;
	fi
}

#
# Function that starts the daemon/service
#
do_start()
{
	if [ ! -d /var/run/anoubisd ]; then
		mkdir /var/run/anoubisd
		chown root:_anoubisd /var/run/anoubisd
		chmod 0770 /var/run/anoubisd
	fi


	# XXX: MG: We need a better way to load our modules so early (Bug 262)
	modprobe alf
	modprobe sfs
	modprobe ipc
	# make sure dazukofs is loaded before anoubisd
	modprobe -q dazukofs

	$DAEMON $DAEMON_ARGS || return 2
}

#
# Function that stops the daemon/service
#
do_stop()
{
	if [ ! -e $PIDFILE ] ; then
		return 0
	fi
	$CTRL stop
}

#
# Function that reloads the daemon/service
#
do_reload() {
	$CTRL reload
}

# Function that restarts the daemon/service
do_restart() {
	$CTRL restart
}

case "$1" in
  start)
	log_daemon_msg "Starting $DESC" "$NAME"
	if ! do_test ; then
		exit 3
	fi
	do_start
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  stop)
	log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  configtest)
	if ! do_test ; then
		exit 3
	else
		exit 0
	fi
	;;
  reload|force-reload)
	#
	# If do_reload() is not implemented then leave this commented out
	# and leave 'force-reload' as an alias for 'restart'.
	#
	log_daemon_msg "Reloading $DESC" "$NAME"
	do_reload
	log_end_msg $?
	;;
  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_restart
	log_end_msg $?
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
	exit 3
	;;
esac

:
